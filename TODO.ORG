** DONE =raw_df= add in line_beg and line_end
** DONE Fix colors on =lyrics_chist=
** DONE =main= Change to something like parse_lyrics
** DONE =section_tree_to_df= change kr_prop to kr_word_prop
** DONE =section_tree_to_df= add kr_syllab_prop and kr/total_syllab_cnt
** DONE =parse_lyrics= Maybe toggle to keep/remove adlibs (things in parentheses)
Need to figure out where (which function) to put interface

https://stackoverflow.com/a/24173271

#+begin_src R :eval no
gsub("\\s*\\([^\\)]+\\)","",parse_lyrics(fName)$Chorus.1[[8]])
unlist(strsplit(parse_lyrics(fName)$Chorus.2[[1]], " \\(.*\\)"))
#+end_src
** DONE Add more statistical analysis interfaces, or flesh out more examples
*** DONE Add option to lyrics_smry to just spit out stat summary
- When sections are not needed
*** DONE Create Contrast wrapper
*** DONE Formalize comparing beg and end of line language, =lyrics_begend=
- Wrapper that gives
  - Test on group difference? (McNemar?)
  - Spits out table
  - Gives "X% of lines started in Korean, Y% Ended in Korean"
*** DONE Formalize comparing props, =lyrics_comp=
** TODO Could look into how repeated sections differ (Chorus)
- Diffs, =cli::diff_str=
** DONE Add License
** TODO Consider adding metadata into beginning of lyrics file
- Then need to change parsing and processing
- Could Have another folder =metadata= that is one-to-one to =lyrics=
** TODO Implement ways to process multiple files/folders
*** TODO Then easy ways to compare groups, composers, companies, etc.
Or just leave up to user
** TODO Formalize interface
The new main can integrate graphs?
Or just leave as a library with some effort required
** TODO Allow =lyrics_chist= and =lyrics_series= to choose word or syllable proportion
- Currently is hard-coded for word proportion
** TODO Strip =lyrics_series= to be only plot, artistic
** TODO Consider writing parser/DF processor in a language that can compile
- Then do visualization and analysis in R
- This is so a binary can be distributed, and R uses only ggplot
- But then I would need to find a syllable package
- Or maybe even in javascript
  - Or Ocaml, Typescript, Clojure, etc.
  - Ocaml:
    - http://ocsigen.org/js_of_ocaml/latest/api/js_of_ocaml/Js_of_ocaml/Dom_html/class-type-inputElement/index.html#method-value
    - https://dune.readthedocs.io/en/latest/jsoo.html
  - Can visualize in d3
    - But does this take json or tabular data
** TODO Could Sentiment Analysis on translated lyrics
ex: VaderSentiment (primarily for social media)
